"""
Django settings for gym project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

# dj_database_url - Parse database configuration from $DATABASE_URL config variable from Heroku
import dj_database_url
from datetime import timedelta
from pathlib import Path
import os
from dotenv import load_dotenv, find_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# For development only - Add below line anywhere before SECRET_KEY
# For production - Add to heroku env config
load_dotenv(find_dotenv())

# UPDATE secret key
# SECURITY WARNING: keep the secret key used in production secret!
if 'SECRET_KEY' in os.environ:
    SECRET_KEY = os.environ['SECRET_KEY']

#######################################
#       ALLOWED HOSTS / DEBUG
#######################################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# Generally avoid wildcards(*). However since Heroku router provides hostname validation it is ok
IS_HEROKU = "DYNO" in os.environ

if IS_HEROKU:
    ALLOWED_HOSTS = ['anywhere-fitness-first.herokuapp.com']
else:
    ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0', 'localhost']

# SECURITY WARNING: don't run with debug turned on in production!
if not IS_HEROKU:
    DEBUG = True

#######################################
#           AUTHENTICATION
#######################################

AUTH_USER_MODEL = 'accounts.Account'
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.AllowAllUsersModelBackend',
    'accounts.backends.CaseInsensitiveModelBackend',
)

#######################################
#           APPLICATIONS
#######################################

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'whitenoise.runserver_nostatic',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',

    'accounts',
    'gym_classes',
    'gym_instructors',
    'gym_packages',
    'user_classes',
    'user_reviews',
    'user_transactions',
]

#######################################
#           MIDDLEWARE
#######################################

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#######################################
#           ROOT PATH
#######################################

ROOT_URLCONF = 'gym.urls'

#######################################
#           TEMPLATES
#######################################

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#######################################
#           DATABASES
#######################################  
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
# https://dev.to/mdrhmn/deploying-react-django-app-using-heroku-2gfa

WSGI_APPLICATION = 'gym.wsgi.application'

DATABASES = {
    'default':
        dj_database_url.config()
}

#######################################
# Password validation
#######################################
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#######################################
#       Internationalization
####################################### 
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
DATE_INPUT_FORMATS = ['%d-%m-%Y']
TIME_ZONE = 'Asia/Singapore'
TIME_INPUT_FORMATS = ('%I:%M %p',)
USE_I18N = True
USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#######################################
#            JWT
#######################################

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}

SIMPLE_JWT = {
    # 'ACCESS_TOKEN_LIFETIME': timedelta(seconds=10),
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),
    'ROTATE_REFRESH_TOKENS': False,
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': os.environ['SIGNING_KEY'],
    # 'SIGNING_KEY': os.getenv('SIGNING_KEY'),
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

#######################################
#              CORS
#######################################
# https://www.stackhawk.com/blog/django-cors-guide/

CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    'https://anywhere-fitness-first.netlify.app',
    'http://localhost:3000',
    'http://localhost:3001',
    'http://localhost:3002',
]

#######################################
#           STATIC FILES
#######################################
# Configuring static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# https://dev.to/mdrhmn/deploying-react-django-app-using-heroku-2gfa

# The URL to use when referring to static files (where they will be served from)
STATIC_URL = '/static/'
MEDIA_URL = "/media/"

# Points to static folder in gym folder (alongside settings.py)
if IS_HEROKU:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'build/static')
    ]
else:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'gym/static')
    ]

# Points to static folder in root directory (alongside manage.py)
# Collected static files from the project will be stored in this folder
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Add compression and caching support
# This combines automatic compression with the caching behaviour provided by Djangoâ€™s ManifestStaticFilesStorage backend
# https://whitenoise.readthedocs.io/en/latest/django.html

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'